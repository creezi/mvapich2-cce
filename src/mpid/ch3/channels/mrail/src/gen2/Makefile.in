# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
AR_FLAGS        = @AR_FLAGS@
RANLIB          = @RANLIB@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
CFLAGS = @CFLAGS@ -D_GNU_SOURCE
INCLUDES= -I@master_top_srcdir@/src/include -I../../../../../../include -I@master_top_srcdir@/src/mpid/ch3/channels/mrail/include/memory -I@master_top_srcdir@/src/mpid/ch3/channels/common/include
VPATH = .:@srcdir@:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory:@master_top_srcdir@/src/mpid/ch3/channels/common/src/reg_cache:@master_top_srcdir@/src/mpid/ch3/channels/common/src/rdma_cm:@master_top_srcdir@/src/mpid/ch3/channels/common/src/detect/hca:@master_top_srcdir@/src/mpid/ch3/channels/common/src/detect/arch:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory/ptmalloc2:@master_top_srcdir@/src/mpid/ch3/channels/common/src/util/:@master_top_srcdir@/src/mpid/ch3/channels/common/src/qos:@master_top_srcdir@/src/mpid/ch3/channels/common/src/ud-hybrid

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect:
	${MAKE} all-local
all-local: .libstamp0 ../../../../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../../../../../lib/lib${MPILIBNAME}.a: ibv_send.o ibv_recv.o ibv_ud.o \
	ibv_ud_zcopy.o rdma_iba_init.o rdma_iba_priv.o dreg.o ibv_param.o vbuf.o \
	ibv_channel_manager.o ibv_rma.o rdma_iba_1sc.o ibv_rndv.o ibv_priv.o avl.o cm.o rdma_cm.o \
	cr.o crc32h.o ring_startup.o sysreport.o mv2_arch_detect.o mv2_hca_detect.o mem_hooks.o \
	mvapich_malloc.o mv2_utils.o mv2_ud_init.o rdma_3dtorus.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../../../../../lib/lib${MPILIBNAME}.la: ibv_send.lo ibv_recv.lo ibv_ud.lo \
	ibv_ud_zcopy.lo rdma_iba_init.lo rdma_iba_priv.lo dreg.lo ibv_param.lo vbuf.lo \
	ibv_channel_manager.lo ibv_rma.lo rdma_iba_1sc.lo ibv_rndv.lo ibv_priv.lo avl.lo cm.lo \
	rdma_cm.lo cr.lo crc32h.lo ring_startup.lo sysreport.lo mv2_arch_detect.lo \
	mv2_hca_detect.lo mem_hooks.lo mvapich_malloc.lo mv2_utils.lo mv2_ud_init.lo \
	rdma_3dtorus.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  ibv_send.c ibv_recv.c ibv_ud.c ibv_ud_zcopy.c rdma_iba_init.c rdma_iba_priv.c \
	dreg.c ibv_param.c vbuf.c ibv_channel_manager.c ibv_rma.c rdma_iba_1sc.c ibv_rndv.c \
	ibv_priv.c avl.c cm.c rdma_cm.c cr.c crc32h.c ring_startup.c sysreport.c \
	mv2_arch_detect.c mv2_hca_detect.c mem_hooks.c mvapich_malloc.c mv2_utils.c mv2_ud_init.c \
	rdma_3dtorus.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------
# Copyright (c) 2003-2011, The Ohio State University. All rights
# reserved.
#
# This file is part of the MVAPICH2 software package developed by the
# team members of The Ohio State University's Network-Based Computing
# Laboratory (NBCL), headed by Professor Dhabaleswar K. (DK) Panda.
#
# For detailed copyright and licensing information, please refer to the
# copyright file COPYRIGHT in the top level MVAPICH2 directory.



.POSIX:

FORCE_TARGET:

