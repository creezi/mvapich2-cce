# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
AR_FLAGS        = @AR_FLAGS@
RANLIB          = @RANLIB@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
master_top_srcdir  = @master_top_srcdir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
INCLUDES = -I../../../../../include -I${master_top_srcdir}/src/include
socksources = \
    mpidi_calls.c           \
    psm_entry.c             \
    psm_exit.c              \
    psm_istart.c            \
    psm_send.c              \
    psm_recv.c              \
    psm_queue.c             \
    psm_1sided.c            \
	psm_comm.c              \
    psm_vbuf.c

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 
	-@rm -f *.lo ${srcdir}/*.lo
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f libmpich2-ch3-sock.a
	-@rm -f libmpich2-ch3-sock.la
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: .libstamp0 ../../../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	    ${MAKE} libmpich2-ch3-sock.la || exit 1; \
	fi

libmpich2-ch3-sock.a: mpidi_calls.o psm_entry.o psm_exit.o psm_istart.o psm_send.o psm_recv.o \
	psm_queue.o psm_1sided.o psm_comm.o psm_vbuf.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} libmpich2-ch3-sock.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} libmpich2-ch3-sock.a $? ; \
	fi
	@${AR} ${AR_FLAGS} libmpich2-ch3-sock.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          libmpich2-ch3-sock.a" ; \
	else \
	  echo ${RANLIB} libmpich2-ch3-sock.a ; \
	fi
	@${RANLIB} libmpich2-ch3-sock.a
.libstamp0 ../../../../../../lib/lib${MPILIBNAME}.a: mpidi_calls.o psm_entry.o psm_exit.o \
	psm_istart.o psm_send.o psm_recv.o psm_queue.o psm_1sided.o psm_comm.o psm_vbuf.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
libmpich2-ch3-sock.la: mpidi_calls.lo psm_entry.lo psm_exit.lo psm_istart.lo psm_send.lo \
	psm_recv.lo psm_queue.lo psm_1sided.lo psm_comm.lo psm_vbuf.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} libmpich2-ch3-sock.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} libmpich2-ch3-sock.la $? ; \
	fi
	@${AR} ${AR_FLAGS} libmpich2-ch3-sock.la $?
.libstamp1 ../../../../../../lib/lib${MPILIBNAME}.la: mpidi_calls.lo psm_entry.lo psm_exit.lo \
	psm_istart.lo psm_send.lo psm_recv.lo psm_queue.lo psm_1sided.lo psm_comm.lo psm_vbuf.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpidi_calls.c psm_entry.c psm_exit.c psm_istart.c psm_send.c psm_recv.c \
	psm_queue.c psm_1sided.c psm_comm.c psm_vbuf.c mpidi_calls.c psm_entry.c psm_exit.c \
	psm_istart.c psm_send.c psm_recv.c psm_queue.c psm_1sided.c psm_comm.c psm_vbuf.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------





.POSIX:

FORCE_TARGET:

